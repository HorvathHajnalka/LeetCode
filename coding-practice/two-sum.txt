Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

You can return the answer in any order.

arr = [1,2,3] target = 4
return = (0,2)

0s?
negatives?
[2,2] 
invalid inputs?

1 -> 3 in array
2 -> 2 in array
â†’ complementer for the sum

set -> const lookup time
value: index

-> O(N) space, time complexity

Solution

def twoSum(nums, target):
	visited = dict()
	for i in range(0, len(nums)):
		complement = target - nums[i]
		if complement in visited:
			return (visited[complement], i)
		else:
			visited[nums[i]] = i
	return -1

Example
nums = [ 1, 2, 3]
target = 4
i = 2
complement = 1
visited = {
	1 : 0,
	2 : 1
}
-> 2, 0
